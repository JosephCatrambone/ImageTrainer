group 'com.josephcatrambone'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'
//mainClassName = 'com.josephcatrambone.aij.Main'

repositories {
	mavenCentral()
	flatDir {
		dirs 'libs'
	}
}

dependencies {
	testCompile group: 'junit', name: 'junit', version: '4.11'
	compile name: 'Aij-1.0'
}

/*
task copyToLib( type: Copy ) {
	into "$buildDir/libs/lib"
	from configurations.runtime
}
*/

jar {
	//dependsOn copyToLib
	from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
	manifest {
		attributes 'Implementation-Title': 'imagetrainer',
			'Implementation-Version': version,
			'Main-Class': 'com.josephcatrambone.imagetrainer.Main'
	}
}

task(quickRun, dependsOn: 'classes', type: JavaExec) {
	main = 'com.josephcatrambone.imagetrainer.Main'
	classpath = sourceSets.main.runtimeClasspath
	//args '1KSentences.txt'
	//systemProperty 'simple.message', 'Running with arg 1KSentences.txt'
}

test {
	testLogging {
		// Make sure output from
		// standard out or error is shown
		// in Gradle output.
		showStandardStreams = true

		// Or we use events method:
		// events 'standard_out', 'standard_error'

		// Or set property events:
		// events = ['standard_out', 'standard_error']
		// Instead of string values we can
		// use enum values:
		// events org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_OUT,
		// org.gradle.api.tasks.testing.logging.TestLogEvent.STANDARD_ERROR,
	}
}

idea {
	module {
		downloadJavadoc = true
		downloadSources = true
	}
}